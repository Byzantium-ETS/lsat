@startuml
title Modèle du domaine

skinparam class {
  BackgroundColor<<Serveur>> #FFF4C8
}

hide stereotype
hide empty members
  
entity "UserId" as Uid

entity "Secret" as Sec

abstract class "User" as U {
  + uid UserId
  + secret Secret
}

package Serveur {
  class "Server" as Se <<Serveur>> {
    - minter Minter
    - router Router
  }
  
  interface "SecretStore" as SS <<Serveur>>
  
  SS : + Secret(uid UserId) (Secret, error)
  SS : + StoreToken(id TokenID, token Token) error
  SS : + Tokens() *map[TokenID]Token
  
  interface "Challenger" as Ch <<Serveur>>
  
  Ch : + Challenge(price int64) PaymentRequest
  
  interface "ServiceManager" as SM <<Serveur>>
  
  SM : + Service(services ...String) ([]Service, error)
  SM : + Capabilities(service String) ([]Caveats, error)
  SM : + VerifyCaveats(caveats ...Caveat) error
  SM : + GetResource(macaroon Macaroon) (Resource, error)
  
  class "Minter" as Mi <<Serveur>> {
    - service ServiceManager
    - challenger Challenger
    - store SecretStore
  }
  
  Mi : + MintToken(uid UserId, services ...Service) (PreToken, error)
  Mi : - AuthToken(lsat *Token) error

}


interface "LightningNode" as LN

LN : SendPayment(PaymentRequest) (Preimage, error)
LN : CreateInvoice(InvoiceBuilder) (PaymentRequest, error)
  
class "Token" as Token {
  macaroon Macaroon
  preimage String
}
    
class "PreToken" as pToken {
  macaroon Macaroon
  invoice String
}
  
    
class "Macaroon" as Mac {
  caveats []Caveat
  signature String
  user_id UserId
}
  
class "TokenId" as Tid {
  hash Hash
  uid UserId
  version Version
}
  
class "Caveat" as Ca {
  key String
  value String
}

  
class "Service" as Ser {
  name String
  price int64
}

class "Resource" as Rs {
  content []byte
  type String
}
  
class "PaymentRequest" as PR {
  invoice String
}

Token "1" -- "1" Mac : > Sert
pToken "1" -- "1" Token : > Génére
Mi "1" -- "*" pToken : > Mint
PR "1" -- "1" pToken : > Compose
Mac "1" -- "1" pToken : > Compose

Tid "1" -- "1" Token : > Identifie 
Mac "1" -- "*" Ser : > Authentifie
Ca "*" -- "*" Mac : > Restreint

Mi "1" -- "1" Ch : > Utilise
Mi "1" -- "1" SS : > Utilise
Mi "1" -- "1" SM : > Utilise

SS "1" -- "*" U : > Contient
SS "1" -- "*" Token : > Contient
SS "1" -- "*" Uid : > Utilise
SS "1" -- "*" Tid : > Utilise
U "1" -- "1" Sec : > Possède
Uid "1" -- "1" U : > Identifie
Sec "1" -- "*" Mac : > Génére

Ser "1" -- "*" SM : < Gère
Ch "1" -- "*" PR : > Construit

Se "1" -- "1" Mi : > Contient
Se "1" -- "*" Ser : > Offre

LN "1" -- "*" Ch : > Devient
LN "1" -- "*" PR : > Crée

Ser "1" -- "1" Rs : > Offre
Mi "1" -- "*" Ser : > Authentifie

@enduml