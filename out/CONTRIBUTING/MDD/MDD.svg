<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="244px" preserveAspectRatio="none" style="width:303px;height:244px;background:#FFFFFF;" version="1.1" viewBox="0 0 303 244" width="303px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="26.2969" id="_title" style="stroke:none;stroke-width:1.0;" width="164" x="68" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="154" x="73" y="22.9951">Modèle du domaine</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="261" x="5" y="56.2969">Dot Executable: /opt/local/bin/dot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="145" x="5" y="72.5938">File does not exist</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="291" x="5" y="88.8906">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="105.1875"> </text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="79" x="5" y="121.4844">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="57" x="5" y="137.7813">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="72" x="5" y="154.0781">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="170.375"> </text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="17" x="10" y="186.6719">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="202.9688"> </text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="227" x="5" y="219.2656">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="235.5625"> </text><!--MD5=[1fb74c9c841d17902493bcc4d634e451]
@startuml
title Modèle du domaine

skinparam class {
  BackgroundColor<<Serveur>> #FFF4C8
}

hide stereotype
hide empty members
  
entity "UserId" as Uid

entity "Secret" as Sec

abstract class "User" as U {
  + uid UserId
  + secret Secret
}

package Serveur {
  class "Server" as Se <<Serveur>> {
    - minter Minter
    - router Router
  }
  
  interface "SecretStore" as SS <<Serveur>>
  
  SS : + Secret(uid UserId) (Secret, error)
  SS : + StoreToken(id TokenID, token Token) error
  SS : + Tokens() *map[TokenID]Token
  
  interface "Challenger" as Ch <<Serveur>>
  
  Ch : + Challenge(price int64) PaymentRequest
  
  interface "ServiceManager" as SM <<Serveur>>
  
  SM : + Service(services ...String) ([]Service, error)
  SM : + Capabilities(service String) ([]Caveats, error)
  SM : + VerifyCaveats(caveats ...Caveat) error
  SM : + GetResource(macaroon Macaroon) (Resource, error)
  
  class "Minter" as Mi <<Serveur>> {
    - service ServiceManager
    - challenger Challenger
    - store SecretStore
  }
  
  Mi : + mintToken(uid UserId, service Service) (PreLsat, error)
  Mi : - authToken(uid UserId, lsat *Token) error

}


interface "LightningNode" as LN

LN : SendPayment(PaymentRequest) (lntypes.Preimage, error)
LN : CreateInvoice(InvoiceBuilder) (PaymentRequest, error)
  
class "Token" as Token {
  macaroon Macaroon
  preimage String
}
    
class "PreToken" as pToken {
  macaroon Macaroon
  invoice String
}
  
    
class "Macaroon" as Mac {
  caveats []Caveat
  sig String
  service String
}
  
class "TokenId" as Tid {
  hash Hash
  uid UserId
  version Version
}
  
class "Caveat" as Ca {
  name String
  value String
}

  
class "Service" as Ser {
  name String
  price int64
}

class "Resource" as Rs {
  content []byte
  type String
}
  
class "PaymentRequest" as PR {
  invoice String
}

Token "1" - - "1" Mac : > Sert
pToken "1" - - "1" Token : > Génére
Mi "1" - - "*" pToken : > Mint
PR "1" - - "1" pToken : > Compose
Mac "1" - - "1" pToken : > Compose

Tid "1" - - "1" Token : > Identifie 
Mac "1" - - "*" Ser : > Authentifie
Ca "*" - - "*" Mac : > Restreint

Mi "1" - - "1" Ch : > Utilise
Mi "1" - - "1" SS : > Utilise
Mi "1" - - "1" SM : > Utilise

SS "1" - - "*" U : > Contient
SS "1" - - "*" Token : > Contient
SS "1" - - "*" Uid : > Utilise
SS "1" - - "*" Tid : > Utilise
U "1" - - "1" Sec : > Possède
Uid "1" - - "1" U : > Identifie
Sec "1" - - "*" Mac : > Génére

Ser "1" - - "*" SM : < Gère
Ch "1" - - "*" PR : > Construit

Se "1" - - "1" Mi : > Contient
Se "1" - - "*" Ser : > Offre

LN "1" - - "*" Ch : > Devient
LN "1" - - "*" PR : > Crée

Ser "1" - - "1" Rs : > Offre
Mi "1" - - "*" Ser : > Authentifie

@enduml

PlantUML version 1.2022.7(Mon Aug 22 13:01:30 EDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>