@startuml Domain Model
title Domain Model

skinparam class {
  BackgroundColor<<L402>> #FFF4C8
}

hide stereotype
hide empty members

package auth {
  class "Minter" as Mi <<L402>> {
    - service ServiceManager
    - challenger Challenger
    - secrets SecretStore

    + MintToken(uid UserId, services ...Service) (PreToken, error)
    - AuthToken(lsat *Token) error
  }

  interface "TokenStore" as TS {
    StoreToken(TokenId, Token) error
    GetToken(TokenId) (*Token, error)
    RemoveToken(TokenId) (*Token, error)
  }
}

package challenge {
  interface "Challenger" as Ch <<L402>> {
    Challenge(price uint64) (InvoiceResponse, error)
  }

  class "InvoiceResponse" as PR {
  	paymentHash Hash
  	invoice     string
  }

  interface "LightningNode" as LN {
    SendPayment(PayInvoiceRequest) (PayInvoiceResponse, error)
    CreateInvoice(CreateInvoiceRequest) (invoiceResponse, error)
  }
}

package macaroon {
  class "Token" as Token {
    macaroon Macaroon
    preimage string
  }

  class "Caveat" as Ca {
    key string
    value string
  }

  class "PreToken" as pToken {
    macaroon Macaroon
    invoice InvoiceResponse
  }

  class "Macaroon" as Mac {
    caveats []Caveat
    signature Hash
    user_id UserId
  }

  class "TokenId" as Tid {
    hash Hash
    uid UserId
    version Version
  }
}

package secrets {
  entity "Secret" as Sec
  class "UserId" as Uid
  entity "User" as U

  interface "SecretStore" as SS <<L402>> {
    NewSecret(uid UserId) (Secret, error)
    GetSecret(uid UserId) (Secret, error)
  }
}

package service {
  interface "Condition" as Cnd {
    Verify([]Caveat) error
  }

  class "ServiceId" as SerId {
    name string
    tier uint8
  }

  class "Service" as Ser {
    name string
    price int64
    tier uint8
    conditions []Condition
  }

  interface "ServiceManager" as SM <<L402>> {
    Service(ServiceId) ([]Service, error)
    VerifyCaveats([]Caveat) error
  }
}


Token "1" -- "1" Mac : > Contains
pToken "1" -- "1" Mac : < Contains
pToken "1" -- "1" PR : < Contains

Tid "1" -- "1" Token : > Identifies
Mac "1" -- "*" Ser : > Describes
Ca "*" -- "*" Mac : > Restricts

Mi "1" -- "*" Ser : > Authorizes
Mi "1" -- "*" pToken : > Mint
Mi "1" -- "1" Ch : > Uses
Mi "1" -- "1" SS : > Uses
Mi "1" -- "1" SM : > Uses

SS "1" -- "*" Sec : > Contains
SS "1" -- "*" Uid : > Uses
Sec "1" -- "*" Mac : > Protects

Uid "1" -- "1" U : > Identifies
U "1" -- "1" Sec : > Posseses
U "1" -- "*" Token : > Posseses

TS "1" -- "*" Tid : > Uses
TS "1" -- "1" Token : > Stores

SM "1" -- "*" SerId : > Uses
SM "1" -- "*" Ser : > Manages
SM "1" -- "*" Mac : > Uses
SM "1" -- "*" Ca : > Uses
SerId "1" -- "1" Ser : > Identifies
Ser "1" -- "*" Cnd : > Contains
Cnd "1" -- "*" Ca : > Checks

LN "1" -- "1" Ch : < Uses
LN "1" -- "*" PR : > Issues

@enduml
